[{"name":"eskema","qualifiedName":"eskema","href":"eskema/","kind":9,"packageRank":0,"desc":"Eskema is a small, composable runtime validation library for Dart. It helps you validate dynamic values (JSON, Maps, Lists, primitives) with readable validators and clear error messages."},{"name":"$isBool","qualifiedName":"eskema.$isBool","href":"eskema/$isBool.html","kind":20,"packageRank":0,"desc":"","enclosedBy":{"name":"eskema","kind":9,"href":"eskema/"}},{"name":"$isDateTime","qualifiedName":"eskema.$isDateTime","href":"eskema/$isDateTime.html","kind":20,"packageRank":0,"desc":"","enclosedBy":{"name":"eskema","kind":9,"href":"eskema/"}},{"name":"$isDouble","qualifiedName":"eskema.$isDouble","href":"eskema/$isDouble.html","kind":20,"packageRank":0,"desc":"","enclosedBy":{"name":"eskema","kind":9,"href":"eskema/"}},{"name":"$isDoubleString","qualifiedName":"eskema.$isDoubleString","href":"eskema/$isDoubleString.html","kind":20,"packageRank":0,"desc":"","enclosedBy":{"name":"eskema","kind":9,"href":"eskema/"}},{"name":"$isEnum","qualifiedName":"eskema.$isEnum","href":"eskema/$isEnum.html","kind":20,"packageRank":0,"desc":"","enclosedBy":{"name":"eskema","kind":9,"href":"eskema/"}},{"name":"$isFunction","qualifiedName":"eskema.$isFunction","href":"eskema/$isFunction.html","kind":20,"packageRank":0,"desc":"","enclosedBy":{"name":"eskema","kind":9,"href":"eskema/"}},{"name":"$isFuture","qualifiedName":"eskema.$isFuture","href":"eskema/$isFuture.html","kind":20,"packageRank":0,"desc":"","enclosedBy":{"name":"eskema","kind":9,"href":"eskema/"}},{"name":"$isInt","qualifiedName":"eskema.$isInt","href":"eskema/$isInt.html","kind":20,"packageRank":0,"desc":"","enclosedBy":{"name":"eskema","kind":9,"href":"eskema/"}},{"name":"$isIntString","qualifiedName":"eskema.$isIntString","href":"eskema/$isIntString.html","kind":20,"packageRank":0,"desc":"","enclosedBy":{"name":"eskema","kind":9,"href":"eskema/"}},{"name":"$isIterable","qualifiedName":"eskema.$isIterable","href":"eskema/$isIterable.html","kind":20,"packageRank":0,"desc":"","enclosedBy":{"name":"eskema","kind":9,"href":"eskema/"}},{"name":"$isList","qualifiedName":"eskema.$isList","href":"eskema/$isList.html","kind":20,"packageRank":0,"desc":"","enclosedBy":{"name":"eskema","kind":9,"href":"eskema/"}},{"name":"$isMap","qualifiedName":"eskema.$isMap","href":"eskema/$isMap.html","kind":20,"packageRank":0,"desc":"","enclosedBy":{"name":"eskema","kind":9,"href":"eskema/"}},{"name":"$isNull","qualifiedName":"eskema.$isNull","href":"eskema/$isNull.html","kind":20,"packageRank":0,"desc":"","enclosedBy":{"name":"eskema","kind":9,"href":"eskema/"}},{"name":"$isNumString","qualifiedName":"eskema.$isNumString","href":"eskema/$isNumString.html","kind":20,"packageRank":0,"desc":"","enclosedBy":{"name":"eskema","kind":9,"href":"eskema/"}},{"name":"$isNumber","qualifiedName":"eskema.$isNumber","href":"eskema/$isNumber.html","kind":20,"packageRank":0,"desc":"","enclosedBy":{"name":"eskema","kind":9,"href":"eskema/"}},{"name":"$isRecord","qualifiedName":"eskema.$isRecord","href":"eskema/$isRecord.html","kind":20,"packageRank":0,"desc":"","enclosedBy":{"name":"eskema","kind":9,"href":"eskema/"}},{"name":"$isSet","qualifiedName":"eskema.$isSet","href":"eskema/$isSet.html","kind":20,"packageRank":0,"desc":"","enclosedBy":{"name":"eskema","kind":9,"href":"eskema/"}},{"name":"$isString","qualifiedName":"eskema.$isString","href":"eskema/$isString.html","kind":20,"packageRank":0,"desc":"","enclosedBy":{"name":"eskema","kind":9,"href":"eskema/"}},{"name":"$isSymbol","qualifiedName":"eskema.$isSymbol","href":"eskema/$isSymbol.html","kind":20,"packageRank":0,"desc":"","enclosedBy":{"name":"eskema","kind":9,"href":"eskema/"}},{"name":"$listEmpty","qualifiedName":"eskema.$listEmpty","href":"eskema/$listEmpty.html","kind":20,"packageRank":0,"desc":"","enclosedBy":{"name":"eskema","kind":9,"href":"eskema/"}},{"name":"$stringEmpty","qualifiedName":"eskema.$stringEmpty","href":"eskema/$stringEmpty.html","kind":20,"packageRank":0,"desc":"","enclosedBy":{"name":"eskema","kind":9,"href":"eskema/"}},{"name":"expectation","qualifiedName":"expectation","href":"expectation/","kind":9,"packageRank":0,"desc":""},{"name":"Expectation","qualifiedName":"expectation.Expectation","href":"expectation/Expectation-class.html","kind":3,"packageRank":0,"desc":"Represents an expectation for a validation result.","enclosedBy":{"name":"expectation","kind":9,"href":"expectation/"}},{"name":"Expectation.new","qualifiedName":"expectation.Expectation.Expectation.new","href":"expectation/Expectation/Expectation.html","kind":2,"packageRank":0,"desc":"","enclosedBy":{"name":"Expectation","kind":3,"href":"expectation/Expectation-class.html"}},{"name":"addToPath","qualifiedName":"expectation.Expectation.addToPath","href":"expectation/Expectation/addToPath.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Append additionalPath to the current path.","enclosedBy":{"name":"Expectation","kind":3,"href":"expectation/Expectation-class.html"}},{"name":"copyWith","qualifiedName":"expectation.Expectation.copyWith","href":"expectation/Expectation/copyWith.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"","enclosedBy":{"name":"Expectation","kind":3,"href":"expectation/Expectation-class.html"}},{"name":"description","qualifiedName":"expectation.Expectation.description","href":"expectation/Expectation/description.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Get a detailed description of the expectation.","enclosedBy":{"name":"Expectation","kind":3,"href":"expectation/Expectation-class.html"}},{"name":"message","qualifiedName":"expectation.Expectation.message","href":"expectation/Expectation/message.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"","enclosedBy":{"name":"Expectation","kind":3,"href":"expectation/Expectation-class.html"}},{"name":"path","qualifiedName":"expectation.Expectation.path","href":"expectation/Expectation/path.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The path to the value being validated. i.e. 'user.name'","enclosedBy":{"name":"Expectation","kind":3,"href":"expectation/Expectation-class.html"}},{"name":"shortDescription","qualifiedName":"expectation.Expectation.shortDescription","href":"expectation/Expectation/shortDescription.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Get a short description of the expectation.","enclosedBy":{"name":"Expectation","kind":3,"href":"expectation/Expectation-class.html"}},{"name":"toInvalidResult","qualifiedName":"expectation.Expectation.toInvalidResult","href":"expectation/Expectation/toInvalidResult.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Convenient method to convert the expectation to an invalid result.","enclosedBy":{"name":"Expectation","kind":3,"href":"expectation/Expectation-class.html"}},{"name":"toString","qualifiedName":"expectation.Expectation.toString","href":"expectation/Expectation/toString.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"A string representation of this object.","enclosedBy":{"name":"Expectation","kind":3,"href":"expectation/Expectation-class.html"}},{"name":"value","qualifiedName":"expectation.Expectation.value","href":"expectation/Expectation/value.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"","enclosedBy":{"name":"Expectation","kind":3,"href":"expectation/Expectation-class.html"}},{"name":"expectation","qualifiedName":"expectation.expectation","href":"expectation/expectation.html","kind":8,"packageRank":0,"desc":"Creates an expectation for a validation result.","enclosedBy":{"name":"expectation","kind":9,"href":"expectation/"}},{"name":"extensions","qualifiedName":"extensions","href":"extensions/","kind":9,"packageRank":0,"desc":""},{"name":"EskemaEskValidatorOperations","qualifiedName":"extensions.EskemaEskValidatorOperations","href":"extensions/EskemaEskValidatorOperations.html","kind":6,"packageRank":0,"desc":"","enclosedBy":{"name":"extensions","kind":9,"href":"extensions/"}},{"name":"operator &","qualifiedName":"extensions.EskemaEskValidatorOperations.operator &","href":"extensions/EskemaEskValidatorOperations/operator_bitwise_and.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Combines two validators with a logical AND, same as using all","enclosedBy":{"name":"EskemaEskValidatorOperations","kind":6,"href":"extensions/EskemaEskValidatorOperations.html"}},{"name":"operator >","qualifiedName":"extensions.EskemaEskValidatorOperations.operator >","href":"extensions/EskemaEskValidatorOperations/operator_greater.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Returns a new validator that will return the error message if the validation fails","enclosedBy":{"name":"EskemaEskValidatorOperations","kind":6,"href":"extensions/EskemaEskValidatorOperations.html"}},{"name":"operator |","qualifiedName":"extensions.EskemaEskValidatorOperations.operator |","href":"extensions/EskemaEskValidatorOperations/operator_bitwise_or.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Combines two validators with a logical OR, same as using any","enclosedBy":{"name":"EskemaEskValidatorOperations","kind":6,"href":"extensions/EskemaEskValidatorOperations.html"}},{"name":"EskemaListExtension","qualifiedName":"extensions.EskemaListExtension","href":"extensions/EskemaListExtension.html","kind":6,"packageRank":0,"desc":"","enclosedBy":{"name":"extensions","kind":9,"href":"extensions/"}},{"name":"validate","qualifiedName":"extensions.EskemaListExtension.validate","href":"extensions/EskemaListExtension/validate.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Returns a Validator that checks a value against the eskema provided,\nthe eskema defines a validator for each item in the list","enclosedBy":{"name":"EskemaListExtension","kind":6,"href":"extensions/EskemaListExtension.html"}},{"name":"EskemaMapExtension","qualifiedName":"extensions.EskemaMapExtension","href":"extensions/EskemaMapExtension.html","kind":6,"packageRank":0,"desc":"","enclosedBy":{"name":"extensions","kind":9,"href":"extensions/"}},{"name":"isNotValid","qualifiedName":"extensions.EskemaMapExtension.isNotValid","href":"extensions/EskemaMapExtension/isNotValid.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Checks if the map is not valid against the provided validator.","enclosedBy":{"name":"EskemaMapExtension","kind":6,"href":"extensions/EskemaMapExtension.html"}},{"name":"isValid","qualifiedName":"extensions.EskemaMapExtension.isValid","href":"extensions/EskemaMapExtension/isValid.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Checks if the map is valid against the provided validator.","enclosedBy":{"name":"EskemaMapExtension","kind":6,"href":"extensions/EskemaMapExtension.html"}},{"name":"validate","qualifiedName":"extensions.EskemaMapExtension.validate","href":"extensions/EskemaMapExtension/validate.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Validates the map against the provided validator.","enclosedBy":{"name":"EskemaMapExtension","kind":6,"href":"extensions/EskemaMapExtension.html"}},{"name":"result","qualifiedName":"result","href":"result/","kind":9,"packageRank":0,"desc":""},{"name":"Result","qualifiedName":"result.Result","href":"result/Result-class.html","kind":3,"packageRank":0,"desc":"Represents the result of a validation.","enclosedBy":{"name":"result","kind":9,"href":"result/"}},{"name":"Result.invalid","qualifiedName":"result.Result.Result.invalid","href":"result/Result/Result.invalid.html","kind":2,"packageRank":0,"desc":"","enclosedBy":{"name":"Result","kind":3,"href":"result/Result-class.html"}},{"name":"Result.new","qualifiedName":"result.Result.Result.new","href":"result/Result/Result.html","kind":2,"packageRank":0,"desc":"","enclosedBy":{"name":"Result","kind":3,"href":"result/Result-class.html"}},{"name":"Result.valid","qualifiedName":"result.Result.Result.valid","href":"result/Result/Result.valid.html","kind":2,"packageRank":0,"desc":"","enclosedBy":{"name":"Result","kind":3,"href":"result/Result-class.html"}},{"name":"copyWith","qualifiedName":"result.Result.copyWith","href":"result/Result/copyWith.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Creates a copy of the result with the given parameters.","enclosedBy":{"name":"Result","kind":3,"href":"result/Result-class.html"}},{"name":"description","qualifiedName":"result.Result.description","href":"result/Result/description.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"","enclosedBy":{"name":"Result","kind":3,"href":"result/Result-class.html"}},{"name":"expectationCount","qualifiedName":"result.Result.expectationCount","href":"result/Result/expectationCount.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"","enclosedBy":{"name":"Result","kind":3,"href":"result/Result-class.html"}},{"name":"expectations","qualifiedName":"result.Result.expectations","href":"result/Result/expectations.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"The list of expectations for the validation result.\nIt will contain expectations independent of the validation result.","enclosedBy":{"name":"Result","kind":3,"href":"result/Result-class.html"}},{"name":"firstExpectation","qualifiedName":"result.Result.firstExpectation","href":"result/Result/firstExpectation.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"","enclosedBy":{"name":"Result","kind":3,"href":"result/Result-class.html"}},{"name":"hasExpectations","qualifiedName":"result.Result.hasExpectations","href":"result/Result/hasExpectations.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"","enclosedBy":{"name":"Result","kind":3,"href":"result/Result-class.html"}},{"name":"isNotValid","qualifiedName":"result.Result.isNotValid","href":"result/Result/isNotValid.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"","enclosedBy":{"name":"Result","kind":3,"href":"result/Result-class.html"}},{"name":"isValid","qualifiedName":"result.Result.isValid","href":"result/Result/isValid.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"","enclosedBy":{"name":"Result","kind":3,"href":"result/Result-class.html"}},{"name":"lastExpectation","qualifiedName":"result.Result.lastExpectation","href":"result/Result/lastExpectation.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"","enclosedBy":{"name":"Result","kind":3,"href":"result/Result-class.html"}},{"name":"shortDescription","qualifiedName":"result.Result.shortDescription","href":"result/Result/shortDescription.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"","enclosedBy":{"name":"Result","kind":3,"href":"result/Result-class.html"}},{"name":"toString","qualifiedName":"result.Result.toString","href":"result/Result/toString.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"A string representation of this object.","enclosedBy":{"name":"Result","kind":3,"href":"result/Result-class.html"}},{"name":"value","qualifiedName":"result.Result.value","href":"result/Result/value.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"","enclosedBy":{"name":"Result","kind":3,"href":"result/Result-class.html"}},{"name":"transformers","qualifiedName":"transformers","href":"transformers/","kind":9,"packageRank":0,"desc":""},{"name":"getField","qualifiedName":"transformers.getField","href":"transformers/getField.html","kind":8,"packageRank":0,"desc":"Returns a IValidator that extracts a field from a Map\nIt fails if it's not a map or if the field if not present","enclosedBy":{"name":"transformers","kind":9,"href":"transformers/"}},{"name":"toDateTime","qualifiedName":"transformers.toDateTime","href":"transformers/toDateTime.html","kind":8,"packageRank":0,"desc":"Accept either a String (attempt to parse) or an existing DateTime\nIf parsing fails, return an invalid result with the standard DateTime expectation","enclosedBy":{"name":"transformers","kind":9,"href":"transformers/"}},{"name":"toDouble","qualifiedName":"transformers.toDouble","href":"transformers/toDouble.html","kind":8,"packageRank":0,"desc":"Returns a IValidator that checks if the given value is a double\nor a String that can be parsed as a double. And passed the mapped value to the child","enclosedBy":{"name":"transformers","kind":9,"href":"transformers/"}},{"name":"toInt","qualifiedName":"transformers.toInt","href":"transformers/toInt.html","kind":8,"packageRank":0,"desc":"Returns a IValidator that checks if the given value is a int\nor a String that can be parsed as a int. And passed the mapped value to the child","enclosedBy":{"name":"transformers","kind":9,"href":"transformers/"}},{"name":"toNum","qualifiedName":"transformers.toNum","href":"transformers/toNum.html","kind":8,"packageRank":0,"desc":"Returns a IValidator that checks if the given value is a num\nor a String that can be parsed as a num.  And passed the mapped value to the child","enclosedBy":{"name":"transformers","kind":9,"href":"transformers/"}},{"name":"transform","qualifiedName":"transformers.transform","href":"transformers/transform.html","kind":8,"packageRank":0,"desc":"Transform validators are used to modify the value being validated\nbefore passing it to the child validator.\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\nReturns a IValidator that transforms the value using the provided function fn","enclosedBy":{"name":"transformers","kind":9,"href":"transformers/"}},{"name":"trim","qualifiedName":"transformers.trim","href":"transformers/trim.html","kind":8,"packageRank":0,"desc":"Trims whitespace from a String.\nFails if the value is not a String.  And passed the mapped value to the child","enclosedBy":{"name":"transformers","kind":9,"href":"transformers/"}},{"name":"util","qualifiedName":"util","href":"util/","kind":9,"packageRank":0,"desc":""},{"name":"ValidatorFailedException","qualifiedName":"util.ValidatorFailedException","href":"util/ValidatorFailedException-class.html","kind":3,"packageRank":0,"desc":"","enclosedBy":{"name":"util","kind":9,"href":"util/"}},{"name":"ValidatorFailedException.new","qualifiedName":"util.ValidatorFailedException.ValidatorFailedException.new","href":"util/ValidatorFailedException/ValidatorFailedException.html","kind":2,"packageRank":0,"desc":"","enclosedBy":{"name":"ValidatorFailedException","kind":3,"href":"util/ValidatorFailedException-class.html"}},{"name":"message","qualifiedName":"util.ValidatorFailedException.message","href":"util/ValidatorFailedException/message.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"","enclosedBy":{"name":"ValidatorFailedException","kind":3,"href":"util/ValidatorFailedException-class.html"}},{"name":"result","qualifiedName":"util.ValidatorFailedException.result","href":"util/ValidatorFailedException/result.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"","enclosedBy":{"name":"ValidatorFailedException","kind":3,"href":"util/ValidatorFailedException-class.html"}},{"name":"hasContainsProperty","qualifiedName":"util.hasContainsProperty","href":"util/hasContainsProperty.html","kind":8,"packageRank":0,"desc":"Check if a value has a contains property.","enclosedBy":{"name":"util","kind":9,"href":"util/"}},{"name":"hasLengthProperty","qualifiedName":"util.hasLengthProperty","href":"util/hasLengthProperty.html","kind":8,"packageRank":0,"desc":"Check if a value has a length property.","enclosedBy":{"name":"util","kind":9,"href":"util/"}},{"name":"pretifyValue","qualifiedName":"util.pretifyValue","href":"util/pretifyValue.html","kind":8,"packageRank":0,"desc":"","enclosedBy":{"name":"util","kind":9,"href":"util/"}},{"name":"validator","qualifiedName":"validator","href":"validator/","kind":9,"packageRank":0,"desc":""},{"name":"Field","qualifiedName":"validator.Field","href":"validator/Field-class.html","kind":3,"packageRank":0,"desc":"An implementation of IdValidator, which acepts a list of validators.","enclosedBy":{"name":"validator","kind":9,"href":"validator/"}},{"name":"Field.new","qualifiedName":"validator.Field.Field.new","href":"validator/Field/Field.html","kind":2,"packageRank":0,"desc":"","enclosedBy":{"name":"Field","kind":3,"href":"validator/Field-class.html"}},{"name":"copyWith","qualifiedName":"validator.Field.copyWith","href":"validator/Field/copyWith.html","kind":10,"overriddenDepth":2,"packageRank":0,"desc":"Creates a copy of the validator with the given parameters.","enclosedBy":{"name":"Field","kind":3,"href":"validator/Field-class.html"}},{"name":"validator","qualifiedName":"validator.Field.validator","href":"validator/Field/validator.html","kind":10,"overriddenDepth":2,"packageRank":0,"desc":"Validates the given value and returns the result.","enclosedBy":{"name":"Field","kind":3,"href":"validator/Field-class.html"}},{"name":"validators","qualifiedName":"validator.Field.validators","href":"validator/Field/validators.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"List of validators to apply to the field.","enclosedBy":{"name":"Field","kind":3,"href":"validator/Field-class.html"}},{"name":"IValidator","qualifiedName":"validator.IValidator","href":"validator/IValidator-class.html","kind":3,"packageRank":0,"desc":"Inmutable class from which all validators inherit.","enclosedBy":{"name":"validator","kind":9,"href":"validator/"}},{"name":"IValidator.new","qualifiedName":"validator.IValidator.IValidator.new","href":"validator/IValidator/IValidator.html","kind":2,"packageRank":0,"desc":"","enclosedBy":{"name":"IValidator","kind":3,"href":"validator/IValidator-class.html"}},{"name":"copyWith","qualifiedName":"validator.IValidator.copyWith","href":"validator/IValidator/copyWith.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Creates a copy of the validator with the given parameters.","enclosedBy":{"name":"IValidator","kind":3,"href":"validator/IValidator-class.html"}},{"name":"isNotValid","qualifiedName":"validator.IValidator.isNotValid","href":"validator/IValidator/isNotValid.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Checks if the given value is not valid.","enclosedBy":{"name":"IValidator","kind":3,"href":"validator/IValidator-class.html"}},{"name":"isNullable","qualifiedName":"validator.IValidator.isNullable","href":"validator/IValidator/isNullable.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Marks the validator as nullable. This means that if the value being checked is null,\nthe validation is considered valid.","enclosedBy":{"name":"IValidator","kind":3,"href":"validator/IValidator-class.html"}},{"name":"isOptional","qualifiedName":"validator.IValidator.isOptional","href":"validator/IValidator/isOptional.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Marks the validator as optional. This means that if the value being checked is null or missing,\nthe validation is considered valid.","enclosedBy":{"name":"IValidator","kind":3,"href":"validator/IValidator-class.html"}},{"name":"isValid","qualifiedName":"validator.IValidator.isValid","href":"validator/IValidator/isValid.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Checks if the given value is valid.","enclosedBy":{"name":"IValidator","kind":3,"href":"validator/IValidator-class.html"}},{"name":"nullable","qualifiedName":"validator.IValidator.nullable","href":"validator/IValidator/nullable.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Creates a nullable copy of the validator.","enclosedBy":{"name":"IValidator","kind":3,"href":"validator/IValidator-class.html"}},{"name":"optional","qualifiedName":"validator.IValidator.optional","href":"validator/IValidator/optional.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Creates a optional copy of the validator.","enclosedBy":{"name":"IValidator","kind":3,"href":"validator/IValidator-class.html"}},{"name":"validate","qualifiedName":"validator.IValidator.validate","href":"validator/IValidator/validate.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Main validation method. Use this method if you want to validate\nthat a dynamic value is valid, and get an error message if not.","enclosedBy":{"name":"IValidator","kind":3,"href":"validator/IValidator-class.html"}},{"name":"validateOrThrow","qualifiedName":"validator.IValidator.validateOrThrow","href":"validator/IValidator/validateOrThrow.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Works the same as validate, validates that a given value is valid,\nbut throws instead if it's not.","enclosedBy":{"name":"IValidator","kind":3,"href":"validator/IValidator-class.html"}},{"name":"validator","qualifiedName":"validator.IValidator.validator","href":"validator/IValidator/validator.html","kind":10,"overriddenDepth":0,"packageRank":0,"desc":"Validates the given value and returns the result.","enclosedBy":{"name":"IValidator","kind":3,"href":"validator/IValidator-class.html"}},{"name":"IdValidator","qualifiedName":"validator.IdValidator","href":"validator/IdValidator-class.html","kind":3,"packageRank":0,"desc":"A Validator sub-class, which adds an identifier,\nwhich can be used to identify the validator,\nfor example MapValidator uses it to validate its fields.","enclosedBy":{"name":"validator","kind":9,"href":"validator/"}},{"name":"IdValidator.new","qualifiedName":"validator.IdValidator.IdValidator.new","href":"validator/IdValidator/IdValidator.html","kind":2,"packageRank":0,"desc":"","enclosedBy":{"name":"IdValidator","kind":3,"href":"validator/IdValidator-class.html"}},{"name":"id","qualifiedName":"validator.IdValidator.id","href":"validator/IdValidator/id.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"Identifier for this particular validator.","enclosedBy":{"name":"IdValidator","kind":3,"href":"validator/IdValidator-class.html"}},{"name":"MapValidator","qualifiedName":"validator.MapValidator","href":"validator/MapValidator-class.html","kind":3,"packageRank":0,"desc":"Abstract class from which to create class based validator schemes.\nEskMap is a utility class designed to facilitate the validation and transformation\nof map-like data structures in Dart. It provides a flexible way to define validation\nrules and apply them to input data, ensuring that the data conforms to expected\nformats or constraints.","enclosedBy":{"name":"validator","kind":9,"href":"validator/"}},{"name":"MapValidator.new","qualifiedName":"validator.MapValidator.MapValidator.new","href":"validator/MapValidator/MapValidator.html","kind":2,"packageRank":0,"desc":"","enclosedBy":{"name":"MapValidator","kind":3,"href":"validator/MapValidator-class.html"}},{"name":"copyWith","qualifiedName":"validator.MapValidator.copyWith","href":"validator/MapValidator/copyWith.html","kind":10,"overriddenDepth":2,"packageRank":0,"desc":"Creates a copy of the validator with the given parameters.","enclosedBy":{"name":"MapValidator","kind":3,"href":"validator/MapValidator-class.html"}},{"name":"fields","qualifiedName":"validator.MapValidator.fields","href":"validator/MapValidator/fields.html","kind":16,"overriddenDepth":0,"packageRank":0,"desc":"List of IdValidators used to validate a dynamic Map.\nEach field represents a value in the map, id is used to identify the key from the map.","enclosedBy":{"name":"MapValidator","kind":3,"href":"validator/MapValidator-class.html"}},{"name":"validator","qualifiedName":"validator.MapValidator.validator","href":"validator/MapValidator/validator.html","kind":10,"overriddenDepth":2,"packageRank":0,"desc":"Validates the given value and returns the result.","enclosedBy":{"name":"MapValidator","kind":3,"href":"validator/MapValidator-class.html"}},{"name":"Validator","qualifiedName":"validator.Validator","href":"validator/Validator-class.html","kind":3,"packageRank":0,"desc":"An implementation of IValidator, which accepts a validator function,\nwhich is used by the EskValidator to validate some data.","enclosedBy":{"name":"validator","kind":9,"href":"validator/"}},{"name":"Validator.new","qualifiedName":"validator.Validator.Validator.new","href":"validator/Validator/Validator.html","kind":2,"packageRank":0,"desc":"","enclosedBy":{"name":"Validator","kind":3,"href":"validator/Validator-class.html"}},{"name":"copyWith","qualifiedName":"validator.Validator.copyWith","href":"validator/Validator/copyWith.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Creates a copy of the validator with the given parameters.","enclosedBy":{"name":"Validator","kind":3,"href":"validator/Validator-class.html"}},{"name":"toString","qualifiedName":"validator.Validator.toString","href":"validator/Validator/toString.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"A string representation of this object.","enclosedBy":{"name":"Validator","kind":3,"href":"validator/Validator-class.html"}},{"name":"validator","qualifiedName":"validator.Validator.validator","href":"validator/Validator/validator.html","kind":10,"overriddenDepth":1,"packageRank":0,"desc":"Validates the given value and returns the result.","enclosedBy":{"name":"Validator","kind":3,"href":"validator/Validator-class.html"}},{"name":"ValidatorFunction","qualifiedName":"validator.ValidatorFunction","href":"validator/ValidatorFunction.html","kind":21,"packageRank":0,"desc":"Type representing a validator function.","enclosedBy":{"name":"validator","kind":9,"href":"validator/"}},{"name":"validators","qualifiedName":"validators","href":"validators/","kind":9,"packageRank":0,"desc":""},{"name":"all","qualifiedName":"validators.all","href":"validators/all.html","kind":8,"packageRank":0,"desc":"Passes the test if all of the Validators are valid, and fails if any of them are invalid","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"any","qualifiedName":"validators.any","href":"validators/any.html","kind":8,"packageRank":0,"desc":"///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\nPasses the test if any of the Validators are valid, and fails if any are invalid","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"contains","qualifiedName":"validators.contains","href":"validators/contains.html","kind":8,"packageRank":0,"desc":"Checks whether the given value contains the item value of type T","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"containsKey","qualifiedName":"validators.containsKey","href":"validators/containsKey.html","kind":8,"packageRank":0,"desc":"","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"eskema","qualifiedName":"validators.eskema","href":"validators/eskema.html","kind":8,"packageRank":0,"desc":"///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\nReturns a Validator that checks a value against a Map eskema that declares a validator for each key.","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"eskemaList","qualifiedName":"validators.eskemaList","href":"validators/eskemaList.html","kind":8,"packageRank":0,"desc":"Returns a Validator that checks a value against the eskema provided,\nthe eskema defines a validator for each item in the list","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"isBool","qualifiedName":"validators.isBool","href":"validators/isBool.html","kind":8,"packageRank":0,"desc":"Returns a IValidator that checks if the given value is a bool\nFor better performance and readability, use the $isBool variable directly.","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"isDate","qualifiedName":"validators.isDate","href":"validators/isDate.html","kind":8,"packageRank":0,"desc":"Checks whether the given value is a valid DateTime formatted String","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"isDateTime","qualifiedName":"validators.isDateTime","href":"validators/isDateTime.html","kind":8,"packageRank":0,"desc":"Returns a IValidator that checks if the given value is a DateTime\nFor better performance and readability, use the $isDateTime variable directly.","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"isDeepEq","qualifiedName":"validators.isDeepEq","href":"validators/isDeepEq.html","kind":8,"packageRank":0,"desc":"Checks whether the given value is equal to the otherValue value of type T","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"isDouble","qualifiedName":"validators.isDouble","href":"validators/isDouble.html","kind":8,"packageRank":0,"desc":"Returns a IValidator that checks if the given value is a double\nFor better performance and readability, use the $isDouble variable directly.","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"isDoubleString","qualifiedName":"validators.isDoubleString","href":"validators/isDoubleString.html","kind":8,"packageRank":0,"desc":"Validates that the String can be parsed as a double (e.g. '123.45', '-1e3')","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"isEmpty","qualifiedName":"validators.isEmpty","href":"validators/isEmpty.html","kind":8,"packageRank":0,"desc":"","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"isEnum","qualifiedName":"validators.isEnum","href":"validators/isEnum.html","kind":8,"packageRank":0,"desc":"Returns a IValidator that checks if the given value is a Enum\nFor better performance and readability, use the $isEnum variable directly.","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"isEq","qualifiedName":"validators.isEq","href":"validators/isEq.html","kind":8,"packageRank":0,"desc":"Checks whether the given value is equal to the otherValue value of type T","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"isFunction","qualifiedName":"validators.isFunction","href":"validators/isFunction.html","kind":8,"packageRank":0,"desc":"Returns a IValidator that checks if the given value is a Function\nFor better performance and readability, use the $isFunction variable directly.","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"isFuture","qualifiedName":"validators.isFuture","href":"validators/isFuture.html","kind":8,"packageRank":0,"desc":"Returns a IValidator that checks if the given value is a Future\nFor better performance and readability, use the $isFuture variable directly.","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"isGt","qualifiedName":"validators.isGt","href":"validators/isGt.html","kind":8,"packageRank":0,"desc":"Checks whether the given value is greater than max","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"isGte","qualifiedName":"validators.isGte","href":"validators/isGte.html","kind":8,"packageRank":0,"desc":"Checks whether the given value is greater or equal to max","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"isInt","qualifiedName":"validators.isInt","href":"validators/isInt.html","kind":8,"packageRank":0,"desc":"Returns a IValidator that checks if the given value is a int\nFor better performance and readability, use the $isInt variable directly.","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"isIntString","qualifiedName":"validators.isIntString","href":"validators/isIntString.html","kind":8,"packageRank":0,"desc":"Validates that the String can be parsed as an int (e.g. '123', '-42')","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"isIterable","qualifiedName":"validators.isIterable","href":"validators/isIterable.html","kind":8,"packageRank":0,"desc":"Returns a IValidator that checks if the given value is a Iterable\nFor better performance and readability, use the $isIterable variable directly.","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"isList","qualifiedName":"validators.isList","href":"validators/isList.html","kind":8,"packageRank":0,"desc":"Returns a IValidator that checks if the given value is a List\nFor better performance and readability, use the $isList variable directly.","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"isLt","qualifiedName":"validators.isLt","href":"validators/isLt.html","kind":8,"packageRank":0,"desc":"///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\nChecks whether the given value is less than max","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"isLte","qualifiedName":"validators.isLte","href":"validators/isLte.html","kind":8,"packageRank":0,"desc":"Checks whether the given value is less than or equal max","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"isMap","qualifiedName":"validators.isMap","href":"validators/isMap.html","kind":8,"packageRank":0,"desc":"Returns a IValidator that checks if the given value is a Map\nFor better performance and readability, use the $isMap variable directly.","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"isNotEmpty","qualifiedName":"validators.isNotEmpty","href":"validators/isNotEmpty.html","kind":8,"packageRank":0,"desc":"Checks whether the given value is not empty","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"isNull","qualifiedName":"validators.isNull","href":"validators/isNull.html","kind":8,"packageRank":0,"desc":"Returns a IValidator that checks if the given value is null\nFor better performance and readability, use the $isNull variable directly.","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"isNumString","qualifiedName":"validators.isNumString","href":"validators/isNumString.html","kind":8,"packageRank":0,"desc":"Validates that the String can be parsed as a num (int or double)","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"isNumber","qualifiedName":"validators.isNumber","href":"validators/isNumber.html","kind":8,"packageRank":0,"desc":"Returns a IValidator that checks if the given value is a num\nFor better performance and readability, use the $isNumber variable directly.","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"isOneOf","qualifiedName":"validators.isOneOf","href":"validators/isOneOf.html","kind":8,"packageRank":0,"desc":"Checks whether the given value is one of the options values of type T","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"isRecord","qualifiedName":"validators.isRecord","href":"validators/isRecord.html","kind":8,"packageRank":0,"desc":"Returns a IValidator that checks if the given value is a Record","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"isSet","qualifiedName":"validators.isSet","href":"validators/isSet.html","kind":8,"packageRank":0,"desc":"Returns a IValidator that checks if the given value is a Set\nFor better performance and readability, use the $isSet variable directly.","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"isString","qualifiedName":"validators.isString","href":"validators/isString.html","kind":8,"packageRank":0,"desc":"Returns a IValidator that checks if the given value is a String\nFor better performance and readability, use the $isString variable directly.","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"isSymbol","qualifiedName":"validators.isSymbol","href":"validators/isSymbol.html","kind":8,"packageRank":0,"desc":"Returns a IValidator that checks if the given value is a Symbol\nFor better performance and readability, use the $isSymbol variable directly.","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"isType","qualifiedName":"validators.isType","href":"validators/isType.html","kind":8,"packageRank":0,"desc":"///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\nReturns a Validator that checks if the given value is the correct type","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"isTypeOrNull","qualifiedName":"validators.isTypeOrNull","href":"validators/isTypeOrNull.html","kind":8,"packageRank":0,"desc":"Returns a Validator that checks if the given value is the correct type","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"length","qualifiedName":"validators.length","href":"validators/length.html","kind":8,"packageRank":0,"desc":"Checks whether the given value has a length property and the length matches the validators","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"listContains","qualifiedName":"validators.listContains","href":"validators/listContains.html","kind":8,"packageRank":0,"desc":"Validates that the List contains item","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"listEach","qualifiedName":"validators.listEach","href":"validators/listEach.html","kind":8,"packageRank":0,"desc":"Returns a Validator that runs itemValidator for each item in the list","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"listEmpty","qualifiedName":"validators.listEmpty","href":"validators/listEmpty.html","kind":8,"packageRank":0,"desc":"Validate that the list is empty","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"listIsOfLength","qualifiedName":"validators.listIsOfLength","href":"validators/listIsOfLength.html","kind":8,"packageRank":0,"desc":"Validates that it's a list of size length","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"listLength","qualifiedName":"validators.listLength","href":"validators/listLength.html","kind":8,"packageRank":0,"desc":"///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\nValidates that it's a List and the length matches the validators","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"none","qualifiedName":"validators.none","href":"validators/none.html","kind":8,"packageRank":0,"desc":"Passes the test if none of the validators pass","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"not","qualifiedName":"validators.not","href":"validators/not.html","kind":8,"packageRank":0,"desc":"Passes the test if the passed in validator is not valid","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"nullable","qualifiedName":"validators.nullable","href":"validators/nullable.html","kind":8,"packageRank":0,"desc":"If the field is not present (null) it will be considered valid\nIf you want to allow empty strings as valid, use optional instead","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"optional","qualifiedName":"validators.optional","href":"validators/optional.html","kind":8,"packageRank":0,"desc":"If the field is not present, it will be considered valid, if present, it executes the validator.\nIt's different from nullable in that it also checks for empty strings","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"stringContains","qualifiedName":"validators.stringContains","href":"validators/stringContains.html","kind":8,"packageRank":0,"desc":"Validates that the String contains str","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"stringEmpty","qualifiedName":"validators.stringEmpty","href":"validators/stringEmpty.html","kind":8,"packageRank":0,"desc":"Validate that the string is empty","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"stringIsOfLength","qualifiedName":"validators.stringIsOfLength","href":"validators/stringIsOfLength.html","kind":8,"packageRank":0,"desc":"Validates that the String's length is the same as the provided size","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"stringLength","qualifiedName":"validators.stringLength","href":"validators/stringLength.html","kind":8,"packageRank":0,"desc":"///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\nValidates that the String's length matches the validators","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"stringMatchesPattern","qualifiedName":"validators.stringMatchesPattern","href":"validators/stringMatchesPattern.html","kind":8,"packageRank":0,"desc":"Validates that the String matches the provided pattern","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"throwInstead","qualifiedName":"validators.throwInstead","href":"validators/throwInstead.html","kind":8,"packageRank":0,"desc":"Returns a Validator that throws a ValidatorFailedException instead of returning a result","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"validator","qualifiedName":"validators.validator","href":"validators/validator.html","kind":8,"packageRank":0,"desc":"","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}},{"name":"withError","qualifiedName":"validators.withError","href":"validators/withError.html","kind":8,"packageRank":0,"desc":"///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\nReturns a IValidator that wraps the given child validator and adds the\nprovided error message to the result if the validation fails.","enclosedBy":{"name":"validators","kind":9,"href":"validators/"}}]
